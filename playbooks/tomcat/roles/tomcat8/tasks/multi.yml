---

- name: Install package tomcat
  zypper:
    name: "{{ item }}"
    state: present 
  with_items:
    - tomcat
    - tomcat-lib
    - tomcat-admin-webapps
    - tomcat-servlet-3_1-api

- name: create Tomcat group
  group:
    name: tomcat
    state: present

- name: create Tomcat user
  user:
    name: tomcat
    state: present
    comment: "Tomcat runtime user"
    group: tomcat



### single instance defined in var: 'tomcat_instance'
# - name: check if instance exists
#   stat:
#     path: /opt/tomcat/{{ tomcat_instance['name'] }}
#   register: tc_exists
#
# - debug:
#     msg: "Instance {{ tomcat_instance['name'] }} exists"
#   when: tc_exists.stat.isdir is defined and tc_exists.stat.isdir
#
# - name: create tomcat instance
#   command: /bin/bash /usr/local/tomcat-admin/tc.sh -n {{ tomcat_instance['name'] }} --offset={{ tomcat_instance['offset'] }} -o
#   when: tc_exists.stat.isdir is undefined


- name: check if instances exists
  stat:
    path: /opt/tomcat/{{ item['name'] }}
  with_items: "{{ tomcat_instances }}"
  register: tc_exists

- debug:
    msg: "Instance {{ tomcat_instance['name'] }} exists"
  when: item.stat.isdir is defined and item.stat.isdir
  with_items: "{{ tc_exists.results }}"
  # with_items: "{{ tc_exists.results | map(attribute='stat') | list }}"

- name: create more tomcat instances
  command: "/bin/bash /usr/local/tomcat-admin/tomcat8/tc.sh -n {{ item.0.name }} --offset={{ item.0.offset }}"
  when: "item.1.stat.isdir is undefined"
  with_together:
    -  "{{ tomcat_instances }}"
    -  "{{ tc_exists.results }}"
  register: command_result
  ignore_errors: yes
#
- name: print command result
  debug:
    msg: "{{ item }} "
  with_items: "{{ command_result.results | map(attribute='stdout') | list }}"
  # with_items: "{{ command_result.results}}"
#
- name: fail the play if the tc.sh did not succeed
  fail: msg="tc command failed"
  when: " item.stdout is defined and 'Aborting' in item.stdout"
  with_items: "{{ command_result.results }}"
  no_log: True
